name: Build Deploy using JIB

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      tag-name: ${{ steps.set-tagname.outputs.tag_name }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: 버전 정보 추출
        run: echo "##[set-output name=version;]$(echo '${{ github.event.head_commit.message }}' | egrep -o '[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}')"
        id: extract_version_name

#      - name: Log in to Docker Hub
#        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
#        with:
#          username: ${{ secrets.DOCKER_USERNAME }}
#          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: 'gradle'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build image
        run: ./gradlew jib -Pdocker.username=${{ secrets.DOCKER_USERNAME }} -Pdocker.password=${{ secrets.DOCKER_PASSWORD }} -Djib.to.tags=${{ steps.extract_version_name.outputs.version }},latest

      - name: set tagname
        id: set-tagname
        run: echo 'tag_name=${{ steps.extract_version_name.outputs.version }}' >> $GITHUB_OUTPUT

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.REMOTE_IP }}
          username: ${{ secrets.REMOTE_SSH_ID }}
          key: ${{ secrets.REMOTE_SSH_KEY }}
          port: ${{ secrets.REMOTE_SSH_PORT }}
          script: |
            container_name=$(docker ps | grep jib-test | awk '{print $NF}')
            cur_port=$(docker port jib-test-0.0.9 | awk 'NR==1 {print $NF}')
            docker pull hseungho/jib-test:${{ needs.build.outputs.tag-name }}
            if [ -n "$container_name" ]; then
              docker stop $container_name
            fi
            if [[ $cur_port == *8080* ]]; then
              docker run -d --name jib-test-${{ needs.build.outputs.tag-name }} -p 8081:8080 hseungho/jib-test:${{ needs.build.outputs.tag-name }}
            else
              docker run -d --name jib-test-${{ needs.build.outputs.tag-name }} -p 8080:8080 hseungho/jib-test:${{ needs.build.outputs.tag-name }}
            fi
            docker ps
